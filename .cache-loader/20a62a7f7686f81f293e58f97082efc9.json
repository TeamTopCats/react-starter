{"remainingRequest":"/Users/lnked/web/react-starter.dev/node_modules/babel-loader/lib/index.js??ref--21-1!/Users/lnked/web/react-starter.dev/node_modules/cache-loader/dist/cjs.js!/Users/lnked/web/react-starter.dev/node_modules/babel-loader/lib/index.js??ref--22-1!/Users/lnked/web/react-starter.dev/node_modules/awesome-typescript-loader/dist/entry.js??ref--22-2!/Users/lnked/web/react-starter.dev/node_modules/eslint-loader/index.js??ref--18!/Users/lnked/web/react-starter.dev/node_modules/tslint-loader/index.js??ref--19!/Users/lnked/web/react-starter.dev/node_modules/source-map-loader/index.js!/Users/lnked/web/react-starter.dev/src/components/circular-progress/index.tsx","dependencies":[{"path":"/Users/lnked/web/react-starter.dev/src/components/circular-progress/index.tsx","mtime":1539788356000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/cache-loader/dist/cjs.js","mtime":1535757827000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/babel-loader/lib/index.js","mtime":1538108594000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/cache-loader/dist/cjs.js","mtime":1535757827000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/babel-loader/lib/index.js","mtime":1538108594000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/awesome-typescript-loader/dist/entry.js","mtime":1536306832000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/eslint-loader/index.js","mtime":1537424147000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/tslint-loader/index.js","mtime":1535757857000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/source-map-loader/index.js","mtime":1535757854000}],"contextDependencies":[],"result":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var React=require(\"react\");var css=require(\"./styles.scss\");var helpers_1=require(\"helpers\");var cx=helpers_1.classes.bind(css);function CircularProgress(_ref){var color=_ref.color,_ref$radius=_ref.radius,radius=_ref$radius===void 0?60:_ref$radius,stroke=_ref.stroke,content=_ref.content,progress=_ref.progress;var normalizedRadius=radius-stroke*2;var circumference=normalizedRadius*2*Math.PI;var strokeDashoffset=circumference-progress/100*circumference;return React.createElement(\"div\",{className:cx(css.progress)},React.createElement(\"div\",{className:cx(css.value)},content),React.createElement(\"svg\",{height:radius*2,width:radius*2},React.createElement(\"circle\",{stroke:color,fill:\"transparent\",className:cx(css.circle),strokeWidth:stroke,strokeDasharray:circumference+\" \"+circumference,style:{strokeDashoffset:strokeDashoffset},r:normalizedRadius,cx:radius,cy:radius})));}exports.CircularProgress=CircularProgress;",{"version":3,"sources":["node_modules/eslint-loader/index.js??ref--18!/Users/lnked/web/react-starter.dev/node_modules/tslint-loader/index.js??ref--19!/Users/lnked/web/react-starter.dev/node_modules/source-map-loader/index.js!/Users/lnked/web/react-starter.dev/src/components/circular-progress/index.tsx"],"names":[],"mappings":"sEAAA,GAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,iBAAA,CAEA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAUA,GAAM,CAAA,EAAE,CAAG,SAAA,CAAA,OAAA,CAAA,IAAA,CAAX,GAAW,CAAX,CAEA,QAAA,CAAA,gBAAA,CAAA,IAAA,CAAsF,CAAlD,GAAA,CAAA,KAAkD,CAAA,IAAA,CAAlD,KAAA,CAAkD,WAAA,CAAA,IAAA,CAA3C,MAAP,CAAO,MAA2C,CAAA,WAAA,GAAA,IAAA,EAAA,CAAlC,EAAkC,CAAA,WAAlD,CAAoB,MAA8B,CAAA,IAAA,CAA9B,MAApB,CAA4B,OAAsB,CAAA,IAAA,CAAtB,OAA5B,CAAqC,QAAa,CAAA,IAAA,CAAb,QAArC,CAChC,GAAM,CAAA,gBAAgB,CAAG,MAAM,CAAG,MAAM,CAAxC,CAAA,CACA,GAAM,CAAA,aAAa,CAAG,gBAAgB,CAAhB,CAAA,CAAuB,IAAI,CAAjD,EAAA,CAEA,GAAM,CAAA,gBAAgB,CAAG,aAAa,CAAG,QAAQ,CAAR,GAAA,CAAzC,aAAA,CAEA,MACI,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,CAAE,EAAE,CAAC,GAAG,CAAtB,QAAkB,CAAlB,CAAA,CACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,CAAE,EAAE,CAAC,GAAG,CAAtB,KAAkB,CAAlB,CAAA,CADJ,OACI,CADJ,CAGI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACI,MAAM,CAAE,MAAM,CADlB,CAAA,CAEI,KAAK,CAAE,MAAM,CAFjB,CAAA,CAAA,CAII,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CACI,MAAM,CADV,KAAA,CAEI,IAAI,CAFR,aAAA,CAGI,SAAS,CAAE,EAAE,CAAC,GAAG,CAHrB,MAGiB,CAHjB,CAII,WAAW,CAJf,MAAA,CAKI,eAAe,CAAM,aAAN,CAAA,GAAM,CALzB,aAAA,CAMI,KAAK,CAAG,CAAE,gBAAgB,CAN9B,gBAMY,CANZ,CAOI,CAAC,CAPL,gBAAA,CAQI,EAAE,CARN,MAAA,CASI,EAAE,CAjBlB,MAQY,CAAA,CAJJ,CAHJ,CADJ,CANJ,CAAA,OAAA,CAAA,gBAAA,CAAA,gBAAA","sourcesContent":["import * as React from 'react'\nimport * as css from './styles.scss'\n\nimport { classes } from 'helpers'\n\nexport interface P {\n    color: string;\n    stroke: number;\n    radius?: number;\n    content?: string | number;\n    progress: number;\n}\n\nconst cx = classes.bind(css)\n\nexport function CircularProgress ({ color, radius = 60, stroke, content, progress }: P) {\n    const normalizedRadius = radius - stroke * 2\n    const circumference = normalizedRadius * 2 * Math.PI\n\n    const strokeDashoffset = circumference - progress / 100 * circumference\n\n    return (\n        <div className={cx(css.progress)}>\n            <div className={cx(css.value)}>{content}</div>\n\n            <svg\n                height={radius * 2}\n                width={radius * 2}\n            >\n                <circle\n                    stroke={color}\n                    fill=\"transparent\"\n                    className={cx(css.circle)}\n                    strokeWidth={ stroke }\n                    strokeDasharray={ `${circumference} ${circumference}` }\n                    style={ { strokeDashoffset } }\n                    r={ normalizedRadius }\n                    cx={ radius }\n                    cy={ radius }\n                />\n            </svg>\n        </div>\n    )\n}\n"],"sourceRoot":"/Users/lnked/web/react-starter.dev/"}]}