{"remainingRequest":"/Users/lnked/web/react-starter.dev/node_modules/babel-loader/lib/index.js??ref--18-1!/Users/lnked/web/react-starter.dev/node_modules/awesome-typescript-loader/dist/entry.js??ref--19-0!/Users/lnked/web/react-starter.dev/node_modules/eslint-loader/index.js??ref--15!/Users/lnked/web/react-starter.dev/node_modules/tslint-loader/index.js??ref--16!/Users/lnked/web/react-starter.dev/node_modules/source-map-loader/index.js!/Users/lnked/web/react-starter.dev/src/components/picture/index.tsx","dependencies":[{"path":"/Users/lnked/web/react-starter.dev/src/components/picture/index.tsx","mtime":1530865930000},{"path":"/Users/lnked/web/react-starter.dev/.babelrc.js","mtime":1532209154000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/lnked/web/react-starter.dev/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/awesome-typescript-loader/dist/entry.js","mtime":1529596564000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/eslint-loader/index.js","mtime":499162500000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/tslint-loader/index.js","mtime":1519899048000},{"path":"/Users/lnked/web/react-starter.dev/node_modules/source-map-loader/index.js","mtime":1508771232000}],"contextDependencies":[],"result":["import*as tslib_1 from\"tslib\";import*as React from\"react\";import*as css from\"./styles.scss\";import classNames from\"classnames/bind\";var cx=classNames.bind(css),Picture=function(a){function b(){var b=null!==a&&a.apply(this,arguments)||this;return b.state={loaded:!1},b.load=function(){var a=new Image;a.onload=function(){return b.setState({loaded:!0})},a.src=b.props.image},b}return tslib_1.__extends(b,a),b.prototype.componentDidMount=function(){this.load()},b.prototype.render=function(){var a=this.state.loaded,b=this.props,c=b.className,d=b.image,e=b.width,f=b.height,g=b.title,h=b.alt;return React.createElement(\"div\",{className:cx({image:!0},c)},a&&React.createElement(\"img\",{src:d,width:e,height:f,title:g,alt:h}))},b.defaultProps={width:\"auto\",height:\"auto\",alt:\"\",preload:!1,className:\"\"},b}(React.Component);export{Picture};",{"version":3,"sources":["../node_modules/eslint-loader/index.js??ref--15!/Users/lnked/web/react-starter.dev/node_modules/tslint-loader/index.js??ref--16!/Users/lnked/web/react-starter.dev/node_modules/source-map-loader/index.js!/Users/lnked/web/react-starter.dev/src/components/picture/index.tsx"],"names":[],"mappings":"8BAAA,MAAO,GAAK,MAAZ,KAAuB,OAAvB,CACA,MAAO,GAAK,IAAZ,KAAqB,eAArB,CAEA,MAAO,WAAP,KAAuB,iBAAvB,C,GAYM,IAAK,WAAW,IAAX,CAAgB,GAAhB,C,CAEX,QAAA,SAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,GAAA,GAAA,IAAA,MAAA,EAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,EAAA,IAAA,C,MASI,GAAA,KAAA,CAAQ,CACJ,SADI,C,CAQR,EAAA,IAAA,CAAO,UAAA,CACH,GAAM,GAAM,GAAI,MAAhB,CAEA,EAAI,MAAJ,CAAa,UAAA,CAAM,MAAA,GAAK,QAAL,CAAc,CAAd,SAAc,CAAd,CAA+B,CAH/C,CAKH,EAAI,GAAJ,CAAU,EAAK,KAAL,CAAW,KACxB,C,EA4CJ,CAAD,MAnE6B,SAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAmE7B,CAtDI,EAAA,SAAA,CAAA,iBAAA,CAAA,UAAA,CACI,KAAK,IAAL,EACH,CAoDL,CA1CI,EAAA,SAAA,CAAA,MAAA,CAAA,UAAA,IACY,GAAA,KAAA,KAAA,CAAA,MADZ,CAEU,EAAA,KAAA,KAFV,CAEY,EAAA,EAAA,SAFZ,CAEuB,EAAA,EAAA,KAFvB,CAE8B,EAAA,EAAA,KAF9B,CAEqC,EAAA,EAAA,MAFrC,CAE6C,EAAA,EAAA,KAF7C,CAEoD,EAAA,EAAA,GAFpD,CAoBI,MACI,OAAA,aAAA,CAAA,KAAA,CAAA,CAAK,UAAW,GAAG,CAAE,QAAF,CAAH,CAAoB,CAApB,CAAhB,CAAA,CACK,GACG,MAAA,aAAA,CAAA,KAAA,CAAA,CACI,IAAK,CADT,CAEI,MAAO,CAFX,CAGI,OAAQ,CAHZ,CAII,MAAO,CAJX,CAKI,IAAK,CALT,CAAA,CAFR,CAoBP,CACL,CAlEW,EAAA,YAAA,CAAe,CAClB,MAAO,MADW,CAElB,OAAQ,MAFU,CAGlB,IAAK,EAHa,CAIlB,UAJkB,CAKlB,UAAW,EALO,CAkE1B,CAAA,CAAC,CAnED,CAA6B,MAAM,SAAnC,C,QAAa,O","sourcesContent":["import * as React from 'react'\nimport * as css from './styles.scss'\n\nimport classNames from 'classnames/bind'\n\nexport interface P {\n    image: any;\n    lqip?: string;\n    width?: number;\n    height?: number;\n    title?: string;\n    alt?: string;\n    className?: string;\n}\n\nconst cx = classNames.bind(css)\n\nexport class Picture extends React.Component<P, {}> {\n    static defaultProps = {\n        width: 'auto',\n        height: 'auto',\n        alt: '',\n        preload: false,\n        className: ''\n    }\n\n    state = {\n        loaded: false\n    }\n\n    componentDidMount () {\n        this.load()\n    }\n\n    load = () => {\n        const img = new Image()\n\n        img.onload = () => this.setState({ loaded: true })\n\n        img.src = this.props.image\n    }\n\n    render () {\n        const { loaded } = this.state\n        const { className, image, width, height, title, alt } = this.props\n\n        // const props: any = {\n        //     width,\n        //     height\n        // }\n\n        // if (title) {\n        //     props.title = title\n        // }\n\n        // const img = {\n        //     width,\n        //     height,\n        //     maxWidth: '100%',\n        //     border: '1px solid red'\n        // }\n\n        return (\n            <div className={cx({ image: true }, className)}>\n                {loaded &&\n                    <img\n                        src={image}\n                        width={width}\n                        height={height}\n                        title={title}\n                        alt={alt}\n                    />\n                }\n                {/* {loaded && <img src={image} {...props} alt={alt} />} */}\n                {/* {!loaded && <svg style={img} />} */}\n\n                {/*\n                <div style={{background: `no-repeat cover url(\"${lqip}\")`}}>\n                    <svg width={width} height={height} />\n                </div>\n                 */}\n            </div>\n        )\n    }\n}\n\n// <picture>\n// <source\n// srcset=\"<список URL c дескрипторами>\"\n// [sizes=\"<ваши размеры в зависимости от раскладки>\"]\n// [media=\"<медиавыражение>\"]\n// [type=\"<mime/type>\"]\n// >\n// <source ...>\n// ...\n// <img src=\"image.jpg\" alt=\"My image\"\n// [srcset=\"<список URL с дескрипторами>\"]\n// [sizes=\"<ваши размеры в зависимости от раскладки>\"]>\n// </picture>\n\n// <img\n// src=\"images/400.jpg\"\n// srcset=\"images/800.jpg 2x, images/1200.jpg 3x\"\n// width=\"400\" height=\"300\"\n// >\n\n// <img\n// src=\"images/400.jpg\"\n// srcset=\" 400w, images/800.jpg 800w, images/1200.jpg 1200w\"\n// sizes=\"(min-width: 700px) 75vw, 100vw\"\n// >\n\n// <img src=\"image.jpg\" alt=\"My image\"\n// [srcset=\"<список URL с дескрипторами>\"]\n// [sizes=\"<ваши размеры в зависимости от раскладки>\"]>\n\n// <picture>\n// <source srcset=\"images/400.webp\" type=\"image/webp\">\n// <img src=\"images/400.jpg\"\n// width=\"400\" height=\"300\"\n// >\n// </picture>\n"],"sourceRoot":"/Users/lnked/web/react-starter.dev/src/"}]}